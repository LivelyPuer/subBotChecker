#!/bin/bash

# üöÄ –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Subscription Checker Bot
# –í–µ—Ä—Å–∏—è: 1.0

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
check_root() {
    if [[ $EUID -ne 0 ]]; then
        print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (sudo)"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
check_system() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã..."
    
    if [[ -f /etc/os-release ]]; then
        . /etc/os-release
        OS=$NAME
        print_success "–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $OS"
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É"
        exit 1
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
install_nodejs() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js..."
    
    if command -v node >/dev/null 2>&1; then
        NODE_VERSION=$(node --version)
        print_success "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $NODE_VERSION"
    else
        print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18.x LTS..."
        curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
        apt-get install -y nodejs
        print_success "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2
install_pm2() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ PM2..."
    
    if command -v pm2 >/dev/null 2>&1; then
        PM2_VERSION=$(pm2 --version)
        print_success "PM2 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $PM2_VERSION"
    else
        print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
        npm install -g pm2
        print_success "PM2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(pm2 --version)"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
create_user() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–æ—Ç–∞..."
    
    if id "botuser" &>/dev/null; then
        print_warning "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å botuser —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        useradd -r -m -s /bin/bash botuser
        print_success "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å botuser —Å–æ–∑–¥–∞–Ω"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
setup_project() {
    PROJECT_DIR="/opt/subBotChecker"
    
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ $PROJECT_DIR..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
    mkdir -p $PROJECT_DIR
    mkdir -p $PROJECT_DIR/logs
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ (–µ—Å–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞)
    if [[ -f "./package.json" ]]; then
        print_status "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
        cp -r ./* $PROJECT_DIR/
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        cd $PROJECT_DIR
        npm install --production
        print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_warning "–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"
        print_status "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤ $PROJECT_DIR –≤—Ä—É—á–Ω—É—é"
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    chown -R botuser:botuser $PROJECT_DIR
    chmod -R 755 $PROJECT_DIR
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if [[ ! -f "$PROJECT_DIR/.env" ]]; then
        print_status "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env..."
        cat > $PROJECT_DIR/.env << EOF
BOT_TOKEN=YOUR_BOT_TOKEN_HERE
DATABASE_PATH=./bot_database.db
NODE_ENV=production
EOF
        chmod 600 $PROJECT_DIR/.env
        chown botuser:botuser $PROJECT_DIR/.env
        print_warning "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª $PROJECT_DIR/.env –∏ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!"
    fi
    
    print_success "–ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ $PROJECT_DIR"
}

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
start_bot() {
    PROJECT_DIR="/opt/subBotChecker"
    
    print_status "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ PM2..."
    
    cd $PROJECT_DIR
    
    # –ó–∞–ø—É—Å–∫ –æ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è botuser
    sudo -u botuser pm2 start ecosystem.config.js
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞..."
    pm2 startup systemd -u botuser --hp /home/botuser
    sudo -u botuser pm2 save
    
    print_success "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
create_update_script() {
    PROJECT_DIR="/opt/subBotChecker"
    
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
    
    cat > $PROJECT_DIR/update.sh << 'EOF'
#!/bin/bash

cd /opt/subBotChecker

echo "üîÑ Updating Subscription Checker Bot..."

# –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [[ -f "bot_database.db" ]]; then
    cp bot_database.db bot_database.db.backup.$(date +%Y%m%d_%H%M%S)
    echo "‚úÖ Database backup created"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sudo -u botuser pm2 stop subscription-checker-bot
echo "üõë Bot stopped"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm install --production
echo "üì¶ Dependencies updated"

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
sudo -u botuser pm2 start subscription-checker-bot
echo "üöÄ Bot started"

echo "‚úÖ Update completed!"
EOF

    chmod +x $PROJECT_DIR/update.sh
    chown botuser:botuser $PROJECT_DIR/update.sh
    
    print_success "–°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω: $PROJECT_DIR/update.sh"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
setup_monitoring() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ jq –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON
    if ! command -v jq >/dev/null 2>&1; then
        apt-get update
        apt-get install -y jq
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è
    cat > /opt/subBotChecker/health-check.sh << 'EOF'
#!/bin/bash

BOT_STATUS=$(sudo -u botuser pm2 jlist 2>/dev/null | jq -r '.[] | select(.name=="subscription-checker-bot") | .pm2_env.status' 2>/dev/null)

if [ "$BOT_STATUS" != "online" ]; then
    echo "$(date): Bot is $BOT_STATUS, restarting..." >> /var/log/bot-health.log
    sudo -u botuser pm2 restart subscription-checker-bot
fi
EOF

    chmod +x /opt/subBotChecker/health-check.sh
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ crontab
    (crontab -l 2>/dev/null; echo "*/5 * * * * /opt/subBotChecker/health-check.sh") | crontab -
    
    print_success "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)"
}

# –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞..."
    
    echo -e "\n${BLUE}=== –°—Ç–∞—Ç—É—Å PM2 ===${NC}"
    sudo -u botuser pm2 status
    
    echo -e "\n${BLUE}=== –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ ===${NC}"
    sudo -u botuser pm2 logs subscription-checker-bot --lines 10 --nostream
    
    echo -e "\n${GREEN}=== –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ===${NC}"
    echo -e "‚Ä¢ –ü—Ä–æ–µ–∫—Ç: /opt/subBotChecker"
    echo -e "‚Ä¢ –õ–æ–≥–∏: /opt/subBotChecker/logs/"
    echo -e "‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: /opt/subBotChecker/.env"
    echo -e "‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: /opt/subBotChecker/update.sh"
    echo -e "\n${YELLOW}–ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –≤ —Ñ–∞–π–ª–µ .env!${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_success "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Subscription Checker Bot"
    
    check_root
    check_system
    
    print_status "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
    apt-get update && apt-get upgrade -y
    
    install_nodejs
    install_pm2
    create_user
    setup_project
    start_bot
    create_update_script
    setup_monitoring
    
    show_status
    
    print_success "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@" 